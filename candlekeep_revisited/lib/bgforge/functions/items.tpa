DEFINE_PATCH_FUNCTION INFER_ARMOR_TYPE
  INT_VAR warn = 1
  RET type
BEGIN
  SPRINT type ~unknown~
  READ_SHORT ITM_type itype
  PATCH_IF itype != ITEM_TYPE_armor BEGIN
    PATCH_IF (warn == 1) BEGIN
      PATCH_WARN ~WARNING: INFER_ARMOR_TYPE - %SOURCE_FILE% is not an armor, skipping!~
    END
  END ELSE BEGIN
    DEFINE_ASSOCIATIVE_ARRAY armor_types BEGIN
      leat01 => ~leather~
      leat04 => ~studded_leather~
      chan01 => ~chain~
      chan04 => ~splint~
      plat01 => ~plate~
      plat04 => ~full_plate~
    END
    PHP_EACH armor_types AS item => type BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING ~%item%.itm~ override
          READ_SHORT UNIDENTIFIED_DESC udesc
          SPRINT $atype(~%udesc%~) $armor_types(~%item%~)
        BUT_ONLY
      END
    END
    READ_SHORT UNIDENTIFIED_DESC udesc
    PATCH_IF VARIABLE_IS_SET $atype(~%udesc%~) BEGIN
      SPRINT type $atype(~%udesc%~)
    END
    PATCH_PRINT ~INFER_ARMOR_TYPE: %SOURCE_FILE% => %type%~
  END

END

DEFINE_PATCH_FUNCTION GET_ARMOR_BASE_AC
  RET base_ac
BEGIN
  base_ac = 100
  GET_OFFSET_ARRAY fx_offs ITM_V10_GEN_EFFECTS
  PHP_EACH fx_offs AS int => fx_off BEGIN
    READ_SHORT fx_off opcode
    PATCH_IF opcode == OPCODE_ac_vs_damage_type_mod BEGIN
      READ_LONG (fx_off + EFF_parameter2) type
      PATCH_IF type == AC_MOD_TYPE_set_base BEGIN // base ac setting
        READ_LONG (fx_off + EFF_parameter1) base_ac
      END
    END
  END
END

DEFINE_PATCH_FUNCTION INFER_ARMOR_ENCHANTMENT
  RET enchantment
BEGIN
  skip = 0
  enchantment = 0

  READ_SHORT ITM_type itype
  PATCH_IF itype != ITEM_TYPE_armor BEGIN
    PATCH_WARN ~INFER_ARMOR_ENCHANTMENT: %SOURCE_FILE% is not an armor, skipping!~
    skip = 1
  END

  // custom, no reliable way to infer
  DEFINE_ASSOCIATIVE_ARRAY custom BEGIN
    ~npchan~ => 3  // Corthala
    ~leat09~ => 3  // Karajah
    ~plat06~ => 2  // ankheg
    ~plat18~ => 2  // red dragon
  END
  SPRINT item ~%SOURCE_RES%~
  TO_LOWER item
  PATCH_IF VARIABLE_IS_SET $custom(~%item%~) BEGIN
    enchantment = $custom(~%item%~)
    skip = 1
  END

  // try to get from name
  READ_STRREF NAME2 name
  INNER_PATCH_SAVE plus ~%name%~ BEGIN
    found = INDEX_BUFFER (CASE_INSENSITIVE EVALUATE_REGEXP ~.*\+\([0-9]+\).*~)
    PATCH_IF found != "-1" BEGIN
      REPLACE_EVALUATE CASE_INSENSITIVE ~.*\+\([0-9]+\).*~ BEGIN END ~%MATCH1%~
    END
  END
  PATCH_IF found != "-1" BEGIN enchantment = plus skip = 1 END

  // and then from type, comparing unidentified desc
  PATCH_IF skip != 1 BEGIN
    LPF GET_ARMOR_BASE_AC RET iac = base_ac END

    DEFINE_ASSOCIATIVE_ARRAY armor_types BEGIN
      leat01 => ~leather~
      leat04 => ~studded_leather~
      chan01 => ~chain~
      chan04 => ~splint~
      plat01 => ~plate~
      plat04 => ~full_plate~
    END

    SPRINT old_source ~%SOURCE_FILE%~
    PHP_EACH armor_types AS item => type BEGIN
      INNER_PATCH_FILE ~%item%.itm~ BEGIN
        READ_SHORT UNIDENTIFIED_DESC udesc
        LPF GET_ARMOR_BASE_AC RET bac = base_ac END
        SET $ac_desc(~%udesc%~) = bac
      END
    END

    READ_SHORT UNIDENTIFIED_DESC udesc
    PATCH_IF VARIABLE_IS_SET $ac_desc(~%udesc%~) BEGIN
      enchantment = $ac_desc(~%udesc%~) - iac
    END

  END

  PATCH_IF enchantment == "-1" BEGIN
    PATCH_WARN ~INFER_ARMOR_ENCHANTMENT: couldn't determine enchantment for %SOURCE_FILE%!~
  END
  PATCH_PRINT ~INFER_ARMOR_ENCHANTMENT: %SOURCE_FILE% => %enchantment%~
END
